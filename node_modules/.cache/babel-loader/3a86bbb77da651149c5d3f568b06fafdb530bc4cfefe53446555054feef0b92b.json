{"ast":null,"code":"var _jsxFileName = \"/Users/ek/Documents/Count/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Button from \"./Components/Button\";\nimport { Input } from \"./Components/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const zero = 0;\n  // Стартовое значение\n  const [startValue, setStartValue] = useState(zero);\n  // Максимальное значение\n  const [maxValue, setMaxValue] = useState(1);\n  // Вывод счетчик\n  const [count, setCount] = useState(startValue);\n  // Вывод текста ошибки\n  const [error, setError] = useState('');\n  const errorMessageStart = 'Error. The start value cannot be less than 0 or greater than or equal to the maximum value.';\n  const errorMessageMax = 'Error. The maximum value cannot be less than 0 or less than or equal to the initial value.';\n\n  // Если в поле инпут Start вводим правильное значение убираем надпись ошибки | передаем значение в максимальное\n  const onChangeStartInputHandler = e => {\n    let targetStartInput = e.currentTarget.valueAsNumber;\n    // Вывод текста ошибки по условию + удаление ошибки\n    targetStartInput >= maxValue || targetStartInput < zero ? setError(errorMessageStart) : setError('');\n    // Передаем стартовое значение в переменную\n    setStartValue(targetStartInput);\n    console.log(\"стартовое\" + targetStartInput);\n  };\n\n  // Если в поле инпут Max вводим правильное значение убираем надпись ошибки | передаем значение в максимальное\n  const onChangeMaxInputHandler = e => {\n    let targetMaxInput = e.currentTarget.valueAsNumber;\n    // Вывод текста ошибки по условию + удаление ошибки\n    targetMaxInput <= startValue || targetMaxInput < zero ? setError(errorMessageMax) : setError('');\n    // Передаем максимальное значение в переменную\n    setMaxValue(targetMaxInput);\n    console.log(\"Максимальное\" + targetMaxInput);\n  };\n\n  // Кнопка Set пере\n  const addValueButton = () => {\n    setStartValue(startValue);\n    setMaxValue(maxValue);\n    setCount(startValue);\n  };\n\n  // По клику на кнопку add прибавить 1\n  const onClickAddHandler = () => {\n    if (count < maxValue) setCount(count + 1);\n  };\n  // По клику на кнопку reset вывести 0\n  const onClickResetHandler = () => {\n    setCount(startValue);\n  };\n\n  // Дизейбл кнопки add по условию\n  const checkedDisabledAdd = count === maxValue || startValue < zero || maxValue < zero ? 'disabledBlue' : 'blue';\n  // Дизейбл кнопки reset по условию\n  const checkedDisabledReset = count === startValue ? 'disabledBlue' : 'blue';\n  // Дизейбл кнопки set по условию\n  const checkedDisabledSet = startValue >= maxValue || startValue < zero || maxValue < zero || maxValue <= startValue ? 'disabledPurple' : 'purple';\n\n  // Подсвечивание инпута красным по условию для стартового значения\n  const checkedErrorStart = startValue >= maxValue ? 'error' : '' || startValue < zero ? 'error' : '';\n  // Подсвечивание инпута красным по условию для стартового значения\n  const checkedErrorMax = maxValue <= startValue ? 'error' : '' || maxValue < zero ? 'error' : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DivCount\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BorderCount\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"descriptionCountAndSettings\",\n          children: \"first Counter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ValueAndCount\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Value\",\n            children: \"value:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Count\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ButtonsCount\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClickAddHandler,\n            color: checkedDisabledAdd,\n            children: 'add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClickResetHandler,\n            color: checkedDisabledReset,\n            children: 'reset'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ButtonInput\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addValueButton,\n              color: checkedDisabledSet,\n              children: 'set'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"descriptionCountAndSettings\",\n      children: \"please enter correct Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InputsMaxStartErrorMassage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ErrorMassage\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"StartMax\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Max\",\n          children: \"start:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Start\",\n          children: \"max:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Inputs\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          color: checkedErrorStart,\n          onChange: onChangeStartInputHandler,\n          value: startValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          color: checkedErrorMax,\n          onChange: onChangeMaxInputHandler,\n          value: maxValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mJdXQWeFvxnXZUGqtocaTG8ihyE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","Input","App","zero","startValue","setStartValue","maxValue","setMaxValue","count","setCount","error","setError","errorMessageStart","errorMessageMax","onChangeStartInputHandler","e","targetStartInput","currentTarget","valueAsNumber","console","log","onChangeMaxInputHandler","targetMaxInput","addValueButton","onClickAddHandler","onClickResetHandler","checkedDisabledAdd","checkedDisabledReset","checkedDisabledSet","checkedErrorStart","checkedErrorMax"],"sources":["/Users/ek/Documents/Count/src/App.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport './App.css';\nimport Button from \"./Components/Button\";\nimport {Input} from \"./Components/Input\";\n\nfunction App() {\n\n    const zero = 0\n    // Стартовое значение\n    const [startValue, setStartValue] = useState<number>(zero)\n    // Максимальное значение\n    const [maxValue, setMaxValue] = useState<number>(1)\n    // Вывод счетчик\n    const [count, setCount] = useState<number>(startValue)\n    // Вывод текста ошибки\n    const [error, setError] = useState<string>('')\n\n    const errorMessageStart = 'Error. The start value cannot be less than 0 or greater than or equal to the maximum value.'\n    const errorMessageMax = 'Error. The maximum value cannot be less than 0 or less than or equal to the initial value.'\n\n    // Если в поле инпут Start вводим правильное значение убираем надпись ошибки | передаем значение в максимальное\n    const onChangeStartInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        let targetStartInput = e.currentTarget.valueAsNumber\n        // Вывод текста ошибки по условию + удаление ошибки\n        targetStartInput >= maxValue || targetStartInput < zero ? setError(errorMessageStart) : setError('')\n        // Передаем стартовое значение в переменную\n        setStartValue(targetStartInput)\n\n        console.log(\"стартовое\" + targetStartInput)\n    }\n\n    // Если в поле инпут Max вводим правильное значение убираем надпись ошибки | передаем значение в максимальное\n    const onChangeMaxInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        let targetMaxInput = e.currentTarget.valueAsNumber\n        // Вывод текста ошибки по условию + удаление ошибки\n        targetMaxInput <= startValue || targetMaxInput < zero ? setError(errorMessageMax) : setError('')\n        // Передаем максимальное значение в переменную\n        setMaxValue(targetMaxInput)\n\n        console.log(\"Максимальное\" + targetMaxInput)\n    }\n\n    // Кнопка Set пере\n    const addValueButton = () => {\n            setStartValue(startValue)\n            setMaxValue(maxValue)\n            setCount(startValue)\n    }\n\n    // По клику на кнопку add прибавить 1\n    const onClickAddHandler = () => {\n      if (count < maxValue) setCount(count + 1)\n    }\n    // По клику на кнопку reset вывести 0\n    const onClickResetHandler = () => {\n    setCount(startValue)\n    }\n\n    // Дизейбл кнопки add по условию\n    const checkedDisabledAdd = count === maxValue || startValue < zero || maxValue < zero ? 'disabledBlue' : 'blue'\n    // Дизейбл кнопки reset по условию\n    const checkedDisabledReset = count === startValue ? 'disabledBlue' : 'blue'\n    // Дизейбл кнопки set по условию\n    const checkedDisabledSet = startValue >= maxValue || startValue < zero || maxValue < zero || maxValue <= startValue ? 'disabledPurple' : 'purple'\n\n    // Подсвечивание инпута красным по условию для стартового значения\n    const checkedErrorStart = startValue >= maxValue ? 'error' : '' || startValue < zero ? 'error' : ''\n    // Подсвечивание инпута красным по условию для стартового значения\n    const checkedErrorMax = maxValue <= startValue ? 'error' : '' || maxValue < zero ? 'error' : ''\n\n\n  return (\n    <div className=\"App\">\n        <div className=\"DivCount\">\n            <div className=\"BorderCount\">\n                <div className=\"descriptionCountAndSettings\">first Counter</div>\n                <div className={\"ValueAndCount\"}>\n                    <div className={\"Value\"}>value:</div>\n                    <div className={\"Count\"}>{count}</div>\n                </div>\n                <div className={\"ButtonsCount\"}>\n                    <Button onClick={onClickAddHandler} color={checkedDisabledAdd} children={'add'} />\n                    <Button onClick={onClickResetHandler} color={checkedDisabledReset} children={'reset'} />\n                        <div className={\"ButtonInput\"}>\n                            <Button onClick={addValueButton} color={checkedDisabledSet} children={'set'}/>\n                        </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"descriptionCountAndSettings\">please enter correct Value</div>\n            <div className={\"InputsMaxStartErrorMassage\"}>\n                <div className={\"ErrorMassage\"}>{error}</div>\n                    <div className={\"StartMax\"}>\n                        <div className={\"Max\"}>start:</div>\n                        <div className={\"Start\"}>max:</div>\n                    </div>\n                        <div className={\"Inputs\"}>\n                            <Input color={checkedErrorStart} onChange={onChangeStartInputHandler} value={startValue}/>\n                            <Input color={checkedErrorMax} onChange={onChangeMaxInputHandler} value={maxValue}/>\n                        </div>\n            </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}