{"ast":null,"code":"var _jsxFileName = \"/Users/ek/Documents/temp/ekzameny/count/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Button from \"./Components/Button\";\nimport { Input } from \"./Components/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [startValue, setStartValue] = useState(0);\n  const onChangeMinInputHandler = event => {\n    const value = event.currentTarget.valueAsNumber;\n    if (value > 0) setStartValue(value);\n  };\n  const [maxValue, setMaxiValue] = useState(startValue);\n  const onChangeMaxInputHandler = event => {\n    setMaxiValue(event.currentTarget.valueAsNumber);\n  };\n  const addValueButton = () => {\n    setStartValue(startValue);\n    setMaxiValue(maxValue);\n  };\n  const [count, setCount] = useState(startValue);\n  const onClickAddHandler = () => {\n    if (count < maxValue) {\n      setCount(count + 1);\n    }\n  };\n  const onClickResetHandler = () => {\n    setCount(startValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickAddHandler,\n        title: 'add'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickResetHandler,\n        title: 'reset'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), \"start:\", /*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChangeMinInputHandler,\n        value: startValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this), \"max:\", /*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChangeMaxInputHandler,\n        value: maxValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addValueButton,\n        title: 'set'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GYnnxW3tdqIVTgmeqGOvlrzv9IE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","Input","App","startValue","setStartValue","onChangeMinInputHandler","event","value","currentTarget","valueAsNumber","maxValue","setMaxiValue","onChangeMaxInputHandler","addValueButton","count","setCount","onClickAddHandler","onClickResetHandler"],"sources":["/Users/ek/Documents/temp/ekzameny/count/src/App.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport './App.css';\nimport Button from \"./Components/Button\";\nimport {Input} from \"./Components/Input\";\n\nfunction App() {\n\n    const [startValue, setStartValue] = useState<number>(0)\n\n    const onChangeMinInputHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.valueAsNumber\n        if(value > 0) setStartValue(value)\n\n    }\n\n    const [maxValue, setMaxiValue] = useState<number>(startValue)\n\n    const onChangeMaxInputHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        setMaxiValue(event.currentTarget.valueAsNumber)\n    }\n\n    const addValueButton = () => {\n        setStartValue(startValue)\n        setMaxiValue(maxValue)\n    }\n\n  const [count, setCount] = useState<number>(startValue)\n\n  const onClickAddHandler = () => {\n      if (count < maxValue) {\n      setCount(count + 1)\n      }\n  }\n\n  const onClickResetHandler = () => {\n    setCount(startValue)\n  }\n\n  return (\n    <div className=\"App\">\n      <div>{count}</div>\n        <div>\n            <Button onClick={onClickAddHandler} title={'add'}/>\n            <Button onClick={onClickResetHandler} title={'reset'}/>\n            start:<Input onChange={onChangeMinInputHandler} value={startValue}/>\n            max:<Input onChange={onChangeMaxInputHandler} value={maxValue}/>\n            <Button onClick={addValueButton} title={'set'}/>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAgBC,QAAQ,QAAO,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAAQC,KAAK,QAAO,oBAAoB;AAAC;AAEzC,SAASC,GAAG,GAAG;EAAA;EAEX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAS,CAAC,CAAC;EAEvD,MAAMM,uBAAuB,GAAIC,KAAoC,IAAK;IACtE,MAAMC,KAAK,GAAGD,KAAK,CAACE,aAAa,CAACC,aAAa;IAC/C,IAAGF,KAAK,GAAG,CAAC,EAAEH,aAAa,CAACG,KAAK,CAAC;EAEtC,CAAC;EAED,MAAM,CAACG,QAAQ,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAASI,UAAU,CAAC;EAE7D,MAAMS,uBAAuB,GAAIN,KAAoC,IAAK;IACtEK,YAAY,CAACL,KAAK,CAACE,aAAa,CAACC,aAAa,CAAC;EACnD,CAAC;EAED,MAAMI,cAAc,GAAG,MAAM;IACzBT,aAAa,CAACD,UAAU,CAAC;IACzBQ,YAAY,CAACD,QAAQ,CAAC;EAC1B,CAAC;EAEH,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAASI,UAAU,CAAC;EAEtD,MAAMa,iBAAiB,GAAG,MAAM;IAC5B,IAAIF,KAAK,GAAGJ,QAAQ,EAAE;MACtBK,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnB;EACJ,CAAC;EAED,MAAMG,mBAAmB,GAAG,MAAM;IAChCF,QAAQ,CAACZ,UAAU,CAAC;EACtB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAMW;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eAChB;MAAA,wBACI,QAAC,MAAM;QAAC,OAAO,EAAEE,iBAAkB;QAAC,KAAK,EAAE;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eACnD,QAAC,MAAM;QAAC,OAAO,EAAEC,mBAAoB;QAAC,KAAK,EAAE;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,UACjD,uBAAC,KAAK;QAAC,QAAQ,EAAEZ,uBAAwB;QAAC,KAAK,EAAEF;MAAW;QAAA;QAAA;QAAA;MAAA,QAAE,QAChE,uBAAC,KAAK;QAAC,QAAQ,EAAES,uBAAwB;QAAC,KAAK,EAAEF;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE,eAChE,QAAC,MAAM;QAAC,OAAO,EAAEG,cAAe;QAAC,KAAK,EAAE;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9C;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GA7CQX,GAAG;AAAA,KAAHA,GAAG;AA+CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}