{"ast":null,"code":"import _slicedToArray from\"/Users/ek/Documents/Count/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./App.css';import Button from\"./Components/Button\";import{Input}from\"./Components/Input\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var zero=0;// Стартовое значение\nvar _useState=useState(zero),_useState2=_slicedToArray(_useState,2),startValue=_useState2[0],setStartValue=_useState2[1];// Максимальное значение\nvar _useState3=useState(7),_useState4=_slicedToArray(_useState3,2),maxValue=_useState4[0],setMaxValue=_useState4[1];// Вывод счетчик\nvar _useState5=useState(startValue),_useState6=_slicedToArray(_useState5,2),count=_useState6[0],setCount=_useState6[1];// Вывод текста ошибки\nvar _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),settings=_useState10[0],setSetting=_useState10[1];var errorMessageStart='Error. The start value cannot be less than zero or greater than or equal to the maximum value.';var errorMessageMax='Error. The maximum value cannot be less than zero or less than or equal to the initial value.';// Если в поле инпут Start вводим правильное значение убираем надпись ошибки | передаем значение в максимальное\nvar onChangeStartInputHandler=function onChangeStartInputHandler(e){var targetStartInput=e.currentTarget.valueAsNumber;// Вывод текста ошибки по условию + удаление ошибки\ntargetStartInput>=maxValue||targetStartInput<zero?setError(errorMessageStart):setError('');// Передаем стартовое значение в переменную\nsetStartValue(targetStartInput);};// Если в поле инпут Max вводим правильное значение убираем надпись ошибки | передаем значение в максимальное\nvar onChangeMaxInputHandler=function onChangeMaxInputHandler(e){var targetMaxInput=e.currentTarget.valueAsNumber;// Вывод текста ошибки по условию + удаление ошибки\ntargetMaxInput<=startValue||targetMaxInput<zero?setError(errorMessageMax):setError('');// Передаем максимальное значение в переменную\nsetMaxValue(targetMaxInput);};// Кнопка Set пере\nvar addValueButton=function addValueButton(){setStartValue(startValue);setMaxValue(maxValue);setCount(startValue);setSetting(!settings);};// По клику на кнопку add прибавить 1\nvar onClickAddHandler=function onClickAddHandler(){if(count<maxValue)setCount(count+1);};// По клику на кнопку reset вывести 0\nvar onClickResetHandler=function onClickResetHandler(){setCount(startValue);};// Дизейбл кнопки add по условию\nvar checkedDisabledAdd=count===maxValue||startValue<zero||maxValue<zero?'disabledBlue':'blue';// Дизейбл кнопки reset по условию\nvar checkedDisabledReset=count===startValue?'disabledBlue':'blue';// Дизейбл кнопки set по условию\nvar checkedDisabledSet=startValue>=maxValue||startValue<zero||maxValue<zero||maxValue<=startValue?'disabledPurple':'purple';// Подсвечивание инпута красным по условию для стартового значения\nvar checkedErrorStart=startValue>=maxValue?'error':''||startValue<zero?'error':'';// Подсвечивание инпута красным по условию для стартового значения\nvar checkedErrorMax=maxValue<=startValue?'error':''||maxValue<zero?'error':'';return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"div\",{className:\"DivCount\",children:/*#__PURE__*/_jsx(\"div\",{className:\"BorderCount\",children:settings?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"descriptionCountAndSettings\",children:\"please enter correct Value\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ErrorMassage\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputsMaxStartErrorMassage\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"StartMax\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Max\",children:\"start:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"Start\",children:\"max:\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Inputs\",children:[/*#__PURE__*/_jsx(Input,{color:checkedErrorStart,onChange:onChangeStartInputHandler,value:startValue}),/*#__PURE__*/_jsx(Input,{color:checkedErrorMax,onChange:onChangeMaxInputHandler,value:maxValue})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{onClick:addValueButton,color:checkedDisabledSet,children:'set'})})]})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"descriptionCountAndSettings\",children:\"first Counter\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ValueAndCount\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Value\",children:\"value:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"Count\",children:count})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ButtonsCount\",children:[/*#__PURE__*/_jsx(Button,{onClick:onClickAddHandler,color:checkedDisabledAdd,children:'add'}),/*#__PURE__*/_jsx(Button,{onClick:onClickResetHandler,color:checkedDisabledReset,children:'reset'}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{onClick:addValueButton,color:checkedDisabledSet,children:'set'})})]})]})})})});}export default App;","map":{"version":3,"names":["React","useState","Button","Input","App","zero","startValue","setStartValue","maxValue","setMaxValue","count","setCount","error","setError","settings","setSetting","errorMessageStart","errorMessageMax","onChangeStartInputHandler","e","targetStartInput","currentTarget","valueAsNumber","onChangeMaxInputHandler","targetMaxInput","addValueButton","onClickAddHandler","onClickResetHandler","checkedDisabledAdd","checkedDisabledReset","checkedDisabledSet","checkedErrorStart","checkedErrorMax"],"sources":["/Users/ek/Documents/Count/src/App.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport './App.css';\nimport Button from \"./Components/Button\";\nimport {Input} from \"./Components/Input\";\n\nfunction App() {\n\n    const zero = 0\n    // Стартовое значение\n    const [startValue, setStartValue] = useState<number>(zero)\n    // Максимальное значение\n    const [maxValue, setMaxValue] = useState<number>(7)\n    // Вывод счетчик\n    const [count, setCount] = useState<number>(startValue)\n    // Вывод текста ошибки\n    const [error, setError] = useState<string>('')\n\n    const [settings, setSetting] = useState<boolean>(false)\n\n    const errorMessageStart = 'Error. The start value cannot be less than zero or greater than or equal to the maximum value.'\n    const errorMessageMax = 'Error. The maximum value cannot be less than zero or less than or equal to the initial value.'\n\n    // Если в поле инпут Start вводим правильное значение убираем надпись ошибки | передаем значение в максимальное\n    const onChangeStartInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        let targetStartInput = e.currentTarget.valueAsNumber\n        // Вывод текста ошибки по условию + удаление ошибки\n        targetStartInput >= maxValue || targetStartInput < zero ? setError(errorMessageStart) : setError('')\n        // Передаем стартовое значение в переменную\n        setStartValue(targetStartInput)\n    }\n\n    // Если в поле инпут Max вводим правильное значение убираем надпись ошибки | передаем значение в максимальное\n    const onChangeMaxInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        let targetMaxInput = e.currentTarget.valueAsNumber\n        // Вывод текста ошибки по условию + удаление ошибки\n        targetMaxInput <= startValue || targetMaxInput < zero ? setError(errorMessageMax) : setError('')\n        // Передаем максимальное значение в переменную\n        setMaxValue(targetMaxInput)\n    }\n\n    // Кнопка Set пере\n    const addValueButton = () => {\n        setStartValue(startValue)\n        setMaxValue(maxValue)\n        setCount(startValue)\n        setSetting(!settings)\n    }\n\n    // По клику на кнопку add прибавить 1\n    const onClickAddHandler = () => {\n        if (count < maxValue) setCount(count + 1)\n    }\n    // По клику на кнопку reset вывести 0\n    const onClickResetHandler = () => {\n        setCount(startValue)\n    }\n\n    // Дизейбл кнопки add по условию\n    const checkedDisabledAdd = count === maxValue || startValue < zero || maxValue < zero ? 'disabledBlue' : 'blue'\n    // Дизейбл кнопки reset по условию\n    const checkedDisabledReset = count === startValue ? 'disabledBlue' : 'blue'\n    // Дизейбл кнопки set по условию\n    const checkedDisabledSet = startValue >= maxValue || startValue < zero || maxValue < zero || maxValue <= startValue ? 'disabledPurple' : 'purple'\n\n    // Подсвечивание инпута красным по условию для стартового значения\n    const checkedErrorStart = startValue >= maxValue ? 'error' : '' || startValue < zero ? 'error' : ''\n    // Подсвечивание инпута красным по условию для стартового значения\n    const checkedErrorMax = maxValue <= startValue ? 'error' : '' || maxValue < zero ? 'error' : ''\n\n\n    return (\n        <div className=\"App\">\n            <div className=\"DivCount\">\n                <div className=\"BorderCount\">\n                    {settings\n                        ?\n                        <>\n                            <div className=\"descriptionCountAndSettings\">please enter correct Value</div>\n                            <div className={\"ErrorMassage\"}>{error}</div>\n                            <div className={\"InputsMaxStartErrorMassage\"}>\n                                <div className={\"StartMax\"}>\n                                    <div className={\"Max\"}>start:</div>\n                                    <div className={\"Start\"}>max:</div>\n                                </div>\n                                <div>\n                                    <div className={\"Inputs\"}>\n                                        <Input color={checkedErrorStart} onChange={onChangeStartInputHandler}\n                                               value={startValue}/>\n                                        <Input color={checkedErrorMax} onChange={onChangeMaxInputHandler}\n                                               value={maxValue}/>\n                                    </div>\n                                    <div>\n                                        <Button onClick={addValueButton} color={checkedDisabledSet} children={'set'}/>\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                        :\n                        <>\n                            <div className=\"descriptionCountAndSettings\">first Counter</div>\n                            <div className={\"ValueAndCount\"}>\n                                <div className={\"Value\"}>value:</div>\n                                <div className={\"Count\"}>{count}</div>\n                            </div>\n                            <div className={\"ButtonsCount\"}>\n                                <Button onClick={onClickAddHandler} color={checkedDisabledAdd} children={'add'}/>\n                                <Button onClick={onClickResetHandler} color={checkedDisabledReset} children={'reset'}/>\n                                <div>\n                                    <Button onClick={addValueButton} color={checkedDisabledSet} children={'set'}/>\n                                </div>\n                            </div>\n                        </>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}