{"ast":null,"code":"var _jsxFileName = \"/Users/ek/Documents/temp/ekzameny/count/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Button from \"./Components/Button\";\nimport { Input } from \"./Components/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const zero = 0;\n  const [startValue, setStartValue] = useState(zero);\n  const onChangeStartInputHandler = e => {\n    /*const startEventValue = e.currentTarget.valueAsNumber\n    if(startEventValue >= zero) setStartValue(startEventValue)*/\n    setStartValue(e.currentTarget.valueAsNumber);\n  };\n  const [maxValue, setMaxiValue] = useState(startValue);\n  const onChangeMaxInputHandler = e => {\n    setMaxiValue(e.currentTarget.valueAsNumber);\n  };\n  const addValueButton = () => {\n    setStartValue(startValue);\n    setMaxiValue(maxValue);\n    setCount(startValue);\n  };\n  const [count, setCount] = useState(startValue);\n  const onClickAddHandler = () => {\n    if (count < maxValue) setCount(count + 1);\n  };\n  const onClickResetHandler = () => {\n    setCount(startValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BorderCount\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Count\",\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ButtonsCount\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClickAddHandler,\n          color: 'blue',\n          children: 'add'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClickResetHandler,\n          color: 'blue',\n          children: 'reset'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), \"start: \", /*#__PURE__*/_jsxDEV(Input, {\n      onChange: onChangeStartInputHandler,\n      value: startValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 20\n    }, this), \"max:\", /*#__PURE__*/_jsxDEV(Input, {\n      onChange: onChangeMaxInputHandler,\n      value: maxValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addValueButton,\n      color: 'secondary',\n      children: 'set'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GrSpuS3BBqb43y87EUZsRGr6KJg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","Input","App","zero","startValue","setStartValue","onChangeStartInputHandler","e","currentTarget","valueAsNumber","maxValue","setMaxiValue","onChangeMaxInputHandler","addValueButton","setCount","count","onClickAddHandler","onClickResetHandler"],"sources":["/Users/ek/Documents/temp/ekzameny/count/src/App.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport './App.css';\nimport Button from \"./Components/Button\";\nimport {Input} from \"./Components/Input\";\n\nfunction App() {\n\n    const zero = 0\n\n    const [startValue, setStartValue] = useState<number>(zero)\n\n    const onChangeStartInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        /*const startEventValue = e.currentTarget.valueAsNumber\n        if(startEventValue >= zero) setStartValue(startEventValue)*/\n        setStartValue(e.currentTarget.valueAsNumber)\n\n\n    }\n\n    const [maxValue, setMaxiValue] = useState<number>(startValue)\n\n    const onChangeMaxInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setMaxiValue(e.currentTarget.valueAsNumber)\n    }\n\n    const addValueButton = () => {\n        setStartValue(startValue)\n        setMaxiValue(maxValue)\n        setCount(startValue)\n\n    }\n\n  const [count, setCount] = useState<number>(startValue)\n\n  const onClickAddHandler = () => {\n      if (count < maxValue) setCount(count + 1)\n  }\n\n  const onClickResetHandler = () => {\n    setCount(startValue)\n  }\n\n\n  return (\n    <div className=\"App\">\n         <div className=\"BorderCount\">\n             <div className={\"Count\"}>{count}</div>\n             <div className={\"ButtonsCount\"}>\n                 <Button onClick={onClickAddHandler} color={'blue'} children={'add'}/>\n                 <Button onClick={onClickResetHandler} color={'blue'} children={'reset'}/>\n             </div>\n         </div>\n        \n            start: <Input onChange={onChangeStartInputHandler} value={startValue}/>\n            max:<Input onChange={onChangeMaxInputHandler} value={maxValue}/>\n            <Button onClick={addValueButton} color={'secondary'} children={'set'}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAgBC,QAAQ,QAAO,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAAQC,KAAK,QAAO,oBAAoB;AAAC;AAEzC,SAASC,GAAG,GAAG;EAAA;EAEX,MAAMC,IAAI,GAAG,CAAC;EAEd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAASI,IAAI,CAAC;EAE1D,MAAMG,yBAAyB,GAAIC,CAAgC,IAAK;IACpE;AACR;IACQF,aAAa,CAACE,CAAC,CAACC,aAAa,CAACC,aAAa,CAAC;EAGhD,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAASK,UAAU,CAAC;EAE7D,MAAMQ,uBAAuB,GAAIL,CAAgC,IAAK;IAClEI,YAAY,CAACJ,CAAC,CAACC,aAAa,CAACC,aAAa,CAAC;EAC/C,CAAC;EAED,MAAMI,cAAc,GAAG,MAAM;IACzBR,aAAa,CAACD,UAAU,CAAC;IACzBO,YAAY,CAACD,QAAQ,CAAC;IACtBI,QAAQ,CAACV,UAAU,CAAC;EAExB,CAAC;EAEH,MAAM,CAACW,KAAK,EAAED,QAAQ,CAAC,GAAGf,QAAQ,CAASK,UAAU,CAAC;EAEtD,MAAMY,iBAAiB,GAAG,MAAM;IAC5B,IAAID,KAAK,GAAGL,QAAQ,EAAEI,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,mBAAmB,GAAG,MAAM;IAChCH,QAAQ,CAACV,UAAU,CAAC;EACtB,CAAC;EAGD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBACf;MAAK,SAAS,EAAC,aAAa;MAAA,wBACxB;QAAK,SAAS,EAAE,OAAQ;QAAA,UAAEW;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,eACtC;QAAK,SAAS,EAAE,cAAe;QAAA,wBAC3B,QAAC,MAAM;UAAC,OAAO,EAAEC,iBAAkB;UAAC,KAAK,EAAE,MAAO;UAAC,QAAQ,EAAE;QAAM;UAAA;UAAA;UAAA;QAAA,QAAE,eACrE,QAAC,MAAM;UAAC,OAAO,EAAEC,mBAAoB;UAAC,KAAK,EAAE,MAAO;UAAC,QAAQ,EAAE;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACvE;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,WAEI,uBAAC,KAAK;MAAC,QAAQ,EAAEX,yBAA0B;MAAC,KAAK,EAAEF;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,QACnE,uBAAC,KAAK;MAAC,QAAQ,EAAEQ,uBAAwB;MAAC,KAAK,EAAEF;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE,eAChE,QAAC,MAAM;MAAC,OAAO,EAAEG,cAAe;MAAC,KAAK,EAAE,WAAY;MAAC,QAAQ,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACzE;AAEV;AAAC,GArDQX,GAAG;AAAA,KAAHA,GAAG;AAuDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}